A Monte Carlo vs Quasi-Monte Carlo Comparison
=============================================

Monte Carlo algorithms work on independent identically distributed (IID)
points while Quasi-Monte Carlo algorithms work on low discrepancy
sequences (LDS). LDS generators, such as those for the lattice and Sobol
sequences, provide samples whose space filling properties can be
exploited by Quasi-Monte Carlo algorithms.

.. code:: ipython3

    import pandas as pd
    pd.options.display.float_format = '{:.2e}'.format
    
    from matplotlib import pyplot as plt
    import matplotlib
    %matplotlib inline
    
    SMALL_SIZE = 10
    MEDIUM_SIZE = 12
    BIGGER_SIZE = 14
    
    plt.rc('font', size=BIGGER_SIZE)          # controls default text sizes
    plt.rc('axes', titlesize=BIGGER_SIZE)     # fontsize of the axes title
    plt.rc('axes', labelsize=BIGGER_SIZE)    # fontsize of the x and y labels
    plt.rc('xtick', labelsize=MEDIUM_SIZE)    # fontsize of the tick labels
    plt.rc('ytick', labelsize=MEDIUM_SIZE)    # fontsize of the tick labels
    plt.rc('legend', fontsize=BIGGER_SIZE)    # legend fontsize
    plt.rc('figure', titlesize=BIGGER_SIZE)  # fontsize of the figure title

.. code:: ipython3

    distrib_names = ['IIDStdUniform','IIDStdGaussian','Lattice','Sobol']

Absolute Tolerance Plots
========================

Testing Parameters - relative tolerance = 0 - lds initial sample size =
32 - iid initial sample size = 256 - Results averaged over 3 trials

Keister Integrand - :math:`y_i = \pi^{d/2} \cos(||x_i||_2)` -
:math:`d=3`

Gaussian True Measure - :math:`\mathcal{N}_3(0,\frac{1}{2})`

Data for the following plot can be generated by running :sub:`~` python
workouts/wo\_mc\_vs\_qmc/comp\_abstols.py :sub:`~`

.. code:: ipython3

    df_abstols = pd.read_csv('../outputs/mc_vs_qmc/abs_tol.csv')
    df_abstols.loc[::25].set_index('abs_tol')




.. raw:: html

    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }
    
        .dataframe tbody tr th {
            vertical-align: top;
        }
    
        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>IIDStdUniform_solution</th>
          <th>IIDStdGaussian_solution</th>
          <th>Lattice_solution</th>
          <th>Sobol_solution</th>
          <th>IIDStdUniform_time</th>
          <th>IIDStdGaussian_time</th>
          <th>Lattice_time</th>
          <th>Sobol_time</th>
          <th>IIDStdUniform_n</th>
          <th>IIDStdGaussian_n</th>
          <th>Lattice_n</th>
          <th>Sobol_n</th>
        </tr>
        <tr>
          <th>abs_tol</th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td>1.00e-03</td>
          <td>nan</td>
          <td>7.23e-01</td>
          <td>7.23e-01</td>
          <td>7.23e-01</td>
          <td>nan</td>
          <td>1.15e+00</td>
          <td>4.91e-03</td>
          <td>3.59e-02</td>
          <td>nan</td>
          <td>1.42e+07</td>
          <td>6.83e+02</td>
          <td>2.73e+03</td>
        </tr>
        <tr>
          <td>6.00e-03</td>
          <td>7.23e-01</td>
          <td>7.23e-01</td>
          <td>7.23e-01</td>
          <td>7.23e-01</td>
          <td>1.17e-01</td>
          <td>3.19e-02</td>
          <td>1.87e-03</td>
          <td>1.65e-02</td>
          <td>3.80e+05</td>
          <td>3.94e+05</td>
          <td>1.71e+02</td>
          <td>3.41e+02</td>
        </tr>
        <tr>
          <td>1.10e-02</td>
          <td>7.25e-01</td>
          <td>7.23e-01</td>
          <td>7.23e-01</td>
          <td>7.23e-01</td>
          <td>3.37e-02</td>
          <td>9.13e-03</td>
          <td>1.34e-03</td>
          <td>1.21e-02</td>
          <td>1.13e+05</td>
          <td>1.17e+05</td>
          <td>8.53e+01</td>
          <td>1.71e+02</td>
        </tr>
        <tr>
          <td>1.60e-02</td>
          <td>7.26e-01</td>
          <td>7.25e-01</td>
          <td>7.23e-01</td>
          <td>7.23e-01</td>
          <td>1.57e-02</td>
          <td>4.38e-03</td>
          <td>1.30e-03</td>
          <td>1.31e-02</td>
          <td>5.35e+04</td>
          <td>5.56e+04</td>
          <td>8.53e+01</td>
          <td>1.71e+02</td>
        </tr>
        <tr>
          <td>2.10e-02</td>
          <td>7.28e-01</td>
          <td>7.25e-01</td>
          <td>7.23e-01</td>
          <td>7.23e-01</td>
          <td>9.34e-03</td>
          <td>2.44e-03</td>
          <td>1.29e-03</td>
          <td>1.18e-02</td>
          <td>3.12e+04</td>
          <td>3.24e+04</td>
          <td>8.53e+01</td>
          <td>1.71e+02</td>
        </tr>
        <tr>
          <td>2.60e-02</td>
          <td>7.27e-01</td>
          <td>7.24e-01</td>
          <td>7.23e-01</td>
          <td>7.23e-01</td>
          <td>6.30e-03</td>
          <td>1.62e-03</td>
          <td>9.20e-04</td>
          <td>1.09e-02</td>
          <td>2.04e+04</td>
          <td>2.12e+04</td>
          <td>4.27e+01</td>
          <td>8.53e+01</td>
        </tr>
        <tr>
          <td>3.10e-02</td>
          <td>7.30e-01</td>
          <td>7.25e-01</td>
          <td>7.24e-01</td>
          <td>7.23e-01</td>
          <td>4.69e-03</td>
          <td>1.35e-03</td>
          <td>6.63e-04</td>
          <td>1.28e-02</td>
          <td>1.44e+04</td>
          <td>1.49e+04</td>
          <td>2.13e+01</td>
          <td>8.53e+01</td>
        </tr>
        <tr>
          <td>3.60e-02</td>
          <td>7.25e-01</td>
          <td>7.25e-01</td>
          <td>7.24e-01</td>
          <td>7.24e-01</td>
          <td>3.64e-03</td>
          <td>1.03e-03</td>
          <td>7.17e-04</td>
          <td>1.04e-02</td>
          <td>1.07e+04</td>
          <td>1.11e+04</td>
          <td>2.13e+01</td>
          <td>4.27e+01</td>
        </tr>
        <tr>
          <td>4.10e-02</td>
          <td>7.26e-01</td>
          <td>7.21e-01</td>
          <td>7.24e-01</td>
          <td>7.24e-01</td>
          <td>3.26e-03</td>
          <td>9.46e-04</td>
          <td>6.75e-04</td>
          <td>9.63e-03</td>
          <td>8.30e+03</td>
          <td>8.62e+03</td>
          <td>2.13e+01</td>
          <td>4.27e+01</td>
        </tr>
        <tr>
          <td>4.60e-02</td>
          <td>7.22e-01</td>
          <td>7.25e-01</td>
          <td>7.24e-01</td>
          <td>7.24e-01</td>
          <td>4.62e-03</td>
          <td>1.00e-03</td>
          <td>8.87e-04</td>
          <td>1.10e-02</td>
          <td>6.63e+03</td>
          <td>6.88e+03</td>
          <td>2.13e+01</td>
          <td>4.27e+01</td>
        </tr>
      </tbody>
    </table>
    </div>



.. code:: ipython3

    fig,ax = plt.subplots(nrows=1, ncols=2, figsize=(15, 5))
    abstols = df_abstols['abs_tol'].values
    for distrib_name in distrib_names:
        times = df_abstols[distrib_name+'_time'].values
        n_total = df_abstols[distrib_name+'_n'].values
        ax[0].loglog(abstols, times, label=distrib_name)
        ax[1].loglog(abstols, n_total, label=distrib_name)
    ax[0].legend(loc='upper right')
    ax[0].set_xlabel('Absolute Tolerance')
    ax[0].set_ylabel('Runtime')
    ax[1].set_xlabel('Absolute Tolerance')
    ax[1].set_ylabel('Total Samples')
    fig.suptitle('Comparing Absolute Tolerances')
    plt.savefig('../outputs/mc_vs_qmc/abstols_plot.png',dpi=200)



.. image:: MC_vs_QMC_files/MC_vs_QMC_5_0.png


.. raw:: html

   <center>

Quasi-Monte Carlo takes less time and fewer samples to achieve the same
accuracy as regular Monte Carlo This number of points for Monte Carlo
algorithms is :math:`\mathcal{O}(1/\epsilon^2)` while Quasi-Monte Carlo
algorithms can be as efficient as :math:`\mathcal{O}(1/\epsilon)`

.. raw:: html

   </center>

Dimension Plots
===============

Testing Parameters - absolute tolerance = 0 - relative tolerance = .01 -
lds initial sample size = 32 - iid initial sample size = 256 - Results
averaged over 3 trials

Keister Integrand - :math:`y_i = \pi^{d/2} \cos(||x_i||_2)`

Gaussian True Measure - :math:`\mathcal{N}_d(0,\frac{1}{2})`

Data for the following plot can be generated by running :sub:`~` python
workouts/wo\_mc\_vs\_qmc/comp\_dimensions.py :sub:`~`

.. code:: ipython3

    df_dimensions = pd.read_csv('../outputs/mc_vs_qmc/dimension.csv')
    df_dimensions.dimension = df_dimensions.dimension.astype(int)
    df_dimensions.loc[::4].set_index('dimension')




.. raw:: html

    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }
    
        .dataframe tbody tr th {
            vertical-align: top;
        }
    
        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>IIDStdUniform_solution</th>
          <th>IIDStdGaussian_solution</th>
          <th>Lattice_solution</th>
          <th>Sobol_solution</th>
          <th>IIDStdUniform_time</th>
          <th>IIDStdGaussian_time</th>
          <th>Lattice_time</th>
          <th>Sobol_time</th>
          <th>IIDStdUniform_n</th>
          <th>IIDStdGaussian_n</th>
          <th>Lattice_n</th>
          <th>Sobol_n</th>
        </tr>
        <tr>
          <th>dimension</th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td>1</td>
          <td>4.60e-01</td>
          <td>4.61e-01</td>
          <td>4.60e-01</td>
          <td>4.60e-01</td>
          <td>1.01e-03</td>
          <td>3.35e-04</td>
          <td>5.63e-04</td>
          <td>4.38e-03</td>
          <td>4.00e+03</td>
          <td>3.33e+03</td>
          <td>2.13e+01</td>
          <td>2.13e+01</td>
        </tr>
        <tr>
          <td>5</td>
          <td>3.78e-01</td>
          <td>3.77e-01</td>
          <td>3.79e-01</td>
          <td>3.79e-01</td>
          <td>8.14e-01</td>
          <td>5.03e-02</td>
          <td>3.94e-03</td>
          <td>2.85e-02</td>
          <td>1.55e+06</td>
          <td>4.15e+05</td>
          <td>3.41e+02</td>
          <td>6.83e+02</td>
        </tr>
        <tr>
          <td>9</td>
          <td>-2.37e+01</td>
          <td>-2.38e+01</td>
          <td>-2.39e+01</td>
          <td>-2.39e+01</td>
          <td>2.83e-02</td>
          <td>5.59e-03</td>
          <td>3.52e-03</td>
          <td>2.62e-02</td>
          <td>2.85e+04</td>
          <td>2.98e+04</td>
          <td>1.71e+02</td>
          <td>1.71e+02</td>
        </tr>
        <tr>
          <td>13</td>
          <td>-3.99e+02</td>
          <td>-4.01e+02</td>
          <td>-4.01e+02</td>
          <td>-4.01e+02</td>
          <td>8.65e-03</td>
          <td>2.52e-03</td>
          <td>5.97e-03</td>
          <td>3.66e-02</td>
          <td>4.54e+03</td>
          <td>5.83e+03</td>
          <td>1.71e+02</td>
          <td>1.71e+02</td>
        </tr>
        <tr>
          <td>17</td>
          <td>-4.78e+03</td>
          <td>-4.76e+03</td>
          <td>-4.77e+03</td>
          <td>-4.77e+03</td>
          <td>3.69e-03</td>
          <td>8.79e-04</td>
          <td>5.47e-03</td>
          <td>3.68e-02</td>
          <td>1.76e+03</td>
          <td>1.82e+03</td>
          <td>1.71e+02</td>
          <td>8.53e+01</td>
        </tr>
        <tr>
          <td>21</td>
          <td>-4.89e+04</td>
          <td>-4.89e+04</td>
          <td>-4.87e+04</td>
          <td>-4.87e+04</td>
          <td>3.33e-03</td>
          <td>7.06e-04</td>
          <td>3.94e-03</td>
          <td>4.21e-02</td>
          <td>1.21e+03</td>
          <td>9.44e+02</td>
          <td>8.53e+01</td>
          <td>8.53e+01</td>
        </tr>
        <tr>
          <td>25</td>
          <td>-4.54e+05</td>
          <td>-4.52e+05</td>
          <td>-4.52e+05</td>
          <td>-4.52e+05</td>
          <td>6.43e-03</td>
          <td>1.05e-03</td>
          <td>7.46e-03</td>
          <td>5.06e-02</td>
          <td>2.37e+03</td>
          <td>2.10e+03</td>
          <td>1.71e+02</td>
          <td>1.71e+02</td>
        </tr>
        <tr>
          <td>29</td>
          <td>-3.88e+06</td>
          <td>-3.85e+06</td>
          <td>-3.85e+06</td>
          <td>-3.84e+06</td>
          <td>1.54e-02</td>
          <td>2.47e-03</td>
          <td>8.63e-03</td>
          <td>5.77e-02</td>
          <td>5.43e+03</td>
          <td>4.45e+03</td>
          <td>1.71e+02</td>
          <td>1.71e+02</td>
        </tr>
        <tr>
          <td>33</td>
          <td>-2.99e+07</td>
          <td>-2.97e+07</td>
          <td>-2.96e+07</td>
          <td>-2.96e+07</td>
          <td>4.18e-02</td>
          <td>5.04e-03</td>
          <td>5.22e-03</td>
          <td>6.04e-02</td>
          <td>1.19e+04</td>
          <td>8.71e+03</td>
          <td>8.53e+01</td>
          <td>1.71e+02</td>
        </tr>
        <tr>
          <td>37</td>
          <td>-1.99e+08</td>
          <td>-1.99e+08</td>
          <td>-1.99e+08</td>
          <td>-1.99e+08</td>
          <td>1.32e-01</td>
          <td>1.69e-02</td>
          <td>1.07e-02</td>
          <td>6.41e-02</td>
          <td>3.56e+04</td>
          <td>2.61e+04</td>
          <td>1.71e+02</td>
          <td>1.71e+02</td>
        </tr>
      </tbody>
    </table>
    </div>



.. code:: ipython3

    fig,ax = plt.subplots(nrows=1, ncols=2, figsize=(15, 5))
    dimensions = df_dimensions['dimension']
    for distrib_name in distrib_names:
        times = df_dimensions[distrib_name+'_time'].values
        n_total = df_dimensions[distrib_name+'_n'].values
        ax[0].loglog(dimensions, times, label=distrib_name)
        ax[1].loglog(dimensions, n_total, label=distrib_name)
    ax[0].legend(loc='upper left')
    ax[0].set_xlabel('Dimension')
    ax[0].set_ylabel('Runtime')
    ax[1].set_xlabel('Dimension')
    ax[1].set_ylabel('Total Samples')
    fig.suptitle('Comparing Dimensions')
    plt.savefig('../outputs/mc_vs_qmc/dimension_plot.png',dpi=200)



.. image:: MC_vs_QMC_files/MC_vs_QMC_9_0.png


