.. contents::
   :depth: 1
..

QMCPy
=====

--------------

Integrand
---------

The function to integrate *Abstract class with concrete implementations*

-  Linear: :math:`\:\: y_i = \sum_{j=0}^{d-1}(x_{ij})`
-  Keister: :math:`\:\: y_i = \pi^{d/2} * \cos(||x_i||_2)`
-  Asian Call

   -  :math:`S_i(t_j)=S(0)e^{(r-\frac{\sigma^2}{2})t_j+\sigma\mathcal{B}(t_j)}`
   -  discounted call payoff
      :math:`= \max(\frac{1}{d}\sum_{j=0}^{d-1} S(jT/d)-K)\;,\: 0)`
   -  discounted put payoff
      :math:`= \max(K-\frac{1}{d}\sum_{j=0}^{d-1} S(jT/d))\;,\: 0)`

--------------

True Measure
------------

General measure used to define the integrand *Abstract class with
concrete implementations*

-  Uniform: :math:`\:\: \mathcal{U}(a,b)`
-  Gaussian: :math:`\:\: \mathcal{N}(\mu,\sigma^2)`
-  Brownian Motion:
   :math:`\:\: \mathcal{B}(t_j)=B(t_{j-1})+Z_j\sqrt{t_j-t_{j-1}} \;` for
   :math:`\;Z_j \sim \mathcal{N}(0,1)`

--------------

Discrete Distribution
---------------------

Sampling nodes IID or LDS (low-discrepancy sequence) *Abstract class
with concrete implementations*

-  IID Standard Uniform:
   :math:`\:\: x_j \overset{iid}{\sim} \mathcal{U}(0,1)`
-  IID Standard Gaussian:
   :math:`\:\: x_j \overset{iid}{\sim} \mathcal{N}(0,1)`
-  Lattice (base 2):
   :math:`\:\: x_j \overset{lds}{\sim} \mathcal{U}(0,1)`
-  Sobol (base 2): :math:`\:\: x_j \overset{lds}{\sim} \mathcal{U}(0,1)`

--------------

Stopping Criterion
------------------

The stopping criterion to determine sufficient approximation *Abstract
class with concrete implementations* Central Limit Theorem (CLT)
:math:`\; \hat{\mu}_n = \overline{Y}_n \approx\mathcal{N}(\mu,\frac{\sigma^2}{n})`\ 
:math:`\; \mathbb{P}[\hat{\mu}_n-\frac{\mathcal{Z}_{\alpha/2}\hat{\sigma}_n}{\sqrt{n}} \leq \mu \leq \hat{\mu}_n+\frac{\mathcal{Z}_{\alpha/2}\hat{\sigma}_n}{\sqrt{n}}] \approx 1-\alpha`

-  CLT for :math:`x_i\sim` iid
-  CLT Repeated for :math:`\{x_{r,i}\}_{r=1}^R \sim` lds

--------------

Accumulate Data Class
---------------------

Stores data values of corresponding stopping criterion procedure
*Abstract class with concrete implementations*

-  Mean Variance Data (Controlled by CLT)
-  Mean Variance Repeated Data (Controlled by CLT Repeated)

--------------

Integrate Method
----------------

Repeatedly samples the integrand at nodes generated by the discrete
distribution and transformed to mimic the integrandâ€™s true measure until
the Stopping Criterion is met *Function with arguments:*

-  Integrand object
-  True Measure object
-  Discrete Distribution object
-  Stopping Criterion object
